{"version":3,"sources":["components/TodoItem.tsx","components/TodoList.tsx","api.ts","components/LoadButton.tsx","App.tsx","index.tsx"],"names":["TodoItem","user","title","complete","tdClassName","className","TodoList","todos","map","todo","id","key","todosFromServer","a","fetch","then","response","json","data","userFromServer","LoadButton","beforeLoaded","afterLoaded","getTodosWithUsers","users","list","find","userId","name","completed","type","onClick","App","useState","isLoading","setIsLoading","isLoaded","setIsLoaded","todosWithUsers","setTodosWithUsers","isStarted","setIsStarted","ReactDOM","render","document","getElementById"],"mappings":"6OAEaA,G,MAAqC,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC1DC,EAAcD,EAClB,YAEA,cAGF,OACE,4BACE,4BAAKD,GACL,4BAAKD,GACL,wBAAII,UAAWD,GACZD,EAAW,YAAc,kBCNrBG,G,MAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,6BACE,2BAAOF,UAAU,SACf,+BACE,4BACE,qCACA,oCACA,wCAGJ,+BACGE,EAAMC,KAAI,SAAAC,GAAI,OACb,kBAAC,EAAD,CACEP,MAAOO,EAAKP,MACZD,KAAMQ,EAAKR,KACXS,GAAID,EAAKC,GACTP,SAAUM,EAAKN,SACfQ,IAAKF,EAAKC,a,uBCtBTE,EAAe,uCAAG,sBAAAC,EAAA,sEACvBC,MAJS,2CAKZC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAFA,uCAESC,MAFT,2CAAH,qDAKfC,EAAc,uCAAG,sBAAAN,EAAA,sEACtBC,MARS,2CASZC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAFD,uCAEUC,MAFV,2CAAH,qDC0BZE,EA/B2B,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YACnDC,EAAiB,uCAAG,gCAAAV,EAAA,6DACxBQ,IADwB,SAEKF,IAFL,cAElBK,EAFkB,gBAGKZ,IAHL,OAGlBL,EAHkB,OAKlBkB,EAAyBlB,EAAMC,KAAI,SAAAC,GAAS,IAAD,EAC/C,MAAO,CACLR,KAAI,UAAEuB,EAAME,MAAK,SAAAzB,GAAI,OAAIA,EAAKS,KAAOD,EAAKkB,iBAAtC,aAAE,EAA6CC,KACnD1B,MAAOO,EAAKP,MACZC,SAAUM,EAAKoB,UACfnB,GAAID,EAAKC,OAIbY,EAAYG,GAdY,2CAAH,qDAiBvB,OACE,6BACE,4BACEpB,UAAU,eACVyB,KAAK,SACLC,QAASR,GAHX,UClBOS,EAAgB,WAAO,IAAD,EACCC,oBAAS,GADV,mBAC1BC,EAD0B,KACfC,EADe,OAEDF,oBAAS,GAFR,mBAE1BG,EAF0B,KAEhBC,EAFgB,OAGWJ,mBAA2B,IAHtC,mBAG1BK,EAH0B,KAGVC,EAHU,OAICN,oBAAkB,GAJnB,mBAI1BO,EAJ0B,KAIfC,EAJe,KAiBjC,OACE,yBAAKpC,UAAU,OACXmC,EAOE,qCALA,kBAAC,EAAD,CACEnB,aAhBW,WACnBc,GAAa,GACbM,GAAa,IAeLnB,YAZU,SAACG,GACnBc,EAAkBd,GAClBU,GAAa,GACbE,GAAY,MAeRH,EACI,0BAAM7B,UAAU,gBAAhB,cACA,qCAGJ+B,EACI,kBAAC,EAAD,CAAU7B,MAAO+B,IACjB,uCCrCZI,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.de102080.chunk.js","sourcesContent":["import React from 'react';\n\nexport const TodoItem: React.FC<TodosWithUsers> = ({ user, title, complete }) => {\n  const tdClassName = complete ? (\n    'completed'\n  ) : (\n    'in-progress'\n  );\n\n  return (\n    <tr>\n      <td>{title}</td>\n      <td>{user}</td>\n      <td className={tdClassName}>\n        {complete ? 'Completed' : 'In progress' }\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { TodoItem } from './TodoItem';\nimport './TodoList.css';\n\ntype Props = {\n  todos: TodosWithUsers[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <div>\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <td>Title</td>\n          <td>Name</td>\n          <td>Status</td>\n        </tr>\n      </thead>\n      <tbody>\n        {todos.map(todo => (\n          <TodoItem\n            title={todo.title}\n            user={todo.user}\n            id={todo.id}\n            complete={todo.complete}\n            key={todo.id}\n          />\n        ))}\n      </tbody>\n    </table>\n  </div>\n);\n","const TODO_URL = 'https://mate.academy/students-api/todos';\nconst USER_URL = 'https://mate.academy/students-api/users';\n\nexport const todosFromServer = async () => ((\n  await fetch(TODO_URL)\n    .then(response => response.json())).data\n);\n\nexport const userFromServer = async () => ((\n  await fetch(USER_URL)\n    .then(response => response.json())).data\n);\n","import React from 'react';\nimport { todosFromServer, userFromServer } from '../api';\n\nconst LoadButton: React.FC<ButtonProps> = ({ beforeLoaded, afterLoaded }) => {\n  const getTodosWithUsers = async () => {\n    beforeLoaded();\n    const users: Users[] = await userFromServer();\n    const todos: Todos[] = await todosFromServer();\n\n    const list: TodosWithUsers[] = todos.map(todo => {\n      return {\n        user: users.find(user => user.id === todo.userId)?.name,\n        title: todo.title,\n        complete: todo.completed,\n        id: todo.id,\n      };\n    });\n\n    afterLoaded(list);\n  };\n\n  return (\n    <div>\n      <button\n        className=\"load__button\"\n        type=\"button\"\n        onClick={getTodosWithUsers}\n      >\n        Load\n      </button>\n    </div>\n  );\n};\n\nexport default LoadButton;\n","import React, { useState } from 'react';\nimport './App.css';\nimport { TodoList } from './components/TodoList';\nimport LoadButton from './components/LoadButton';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [todosWithUsers, setTodosWithUsers] = useState<TodosWithUsers[]>([]);\n  const [isStarted, setIsStarted] = useState<boolean>(false);\n\n  const beforeLoaded = () => {\n    setIsLoading(true);\n    setIsStarted(true);\n  };\n\n  const afterLoaded = (list: TodosWithUsers[]) => {\n    setTodosWithUsers(list);\n    setIsLoading(false);\n    setIsLoaded(true);\n  };\n\n  return (\n    <div className=\"App\">\n      {!isStarted\n        ? (\n          <LoadButton\n            beforeLoaded={beforeLoaded}\n            afterLoaded={afterLoaded}\n          />\n        )\n        : <></>}\n\n      {\n        isLoading\n          ? <span className=\"button__text\">Loading...</span>\n          : <></>\n      }\n      {\n        isLoaded\n          ? <TodoList todos={todosWithUsers} />\n          : <></>\n      }\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}